// This file is auto-generated by @hey-api/openapi-ts

export type Response = {
  date?: string;
  code?:
    | "INTERNAL_ERROR"
    | "ACCESS_DENIED"
    | "BAD_REQUEST"
    | "NOT_FOUND"
    | "CREATED"
    | "UNSUPPORTED_MEDIA_TYPE"
    | "OK"
    | "UNAUTHORIZED"
    | "SERVICE_UNAVAILABLE"
    | "ENTITY"
    | "DB_ERROR"
    | "IAM_ERROR"
    | "AWS_ERROR"
    | "USER_ARCHIVED"
    | "USER_UNARCHIVED"
    | "USER_NOT_EXIST"
    | "BILLING_INVOICE_STATEMENT"
    | "INVALID_CREDENTIALS"
    | "LOGIN_FAILED"
    | "INVALID_REFRESH_TOKEN"
    | "LOGOUT_RESPONSE"
    | "LOGOUT_FAILED"
    | "SET_PASSWORD_RESPONSE"
    | "INVALID_PASSWORD_LINK"
    | "INVALID_PASSWORD"
    | "RESET_PASSWORD_FAILED"
    | "CHANGE_PASSWORD_RESPONSE"
    | "VERIFY_PASSWORD_LINK_RESPONSE"
    | "FORGOT_PASSWORD_RESPONSE"
    | "RESEND_INVITE_EMAIL_RESPONSE"
    | "USER_CREATED"
    | "USER_NOT_FOUND"
    | "USER_EMAIL_NOT_FOUND"
    | "UPDATE_USER_PROFILE_RESPONSE"
    | "USER_ENABLED"
    | "USER_DISABLED"
    | "DUPLICATE_EMAIL_ERROR"
    | "CHANGE_AVATAR_RESPONSE"
    | "USER_EMAIL_REQUIRED"
    | "USER_EMAIL_UPDATE_ERROR"
    | "INVALID_USER_ROLE"
    | "USER_EMAIL_VERIFIED"
    | "SIGNED_UP"
    | "USER_INACTIVE"
    | "EMPTY_EMAIL"
    | "MAIL_SENT_SUCCESSFULLY"
    | "RESEND_OTP"
    | "INVALID_OTP"
    | "PROVIDER_GROUP_CREATED"
    | "PROVIDER_GROUP_UPDATED"
    | "FAILED_UPDATE_PROVIDER_GROUP"
    | "PROVIDER_GROUP_ENABLED"
    | "PROVIDER_GROUP_DISABLED"
    | "PROVIDER_GROUP_ARCHIVED"
    | "PROVIDER_GROUP_UNARCHIVED"
    | "LOCATION_CREATED"
    | "LOCATION_UPDATED"
    | "LOCATION_NOT_FOUND"
    | "LOCATION_ENABLED"
    | "LOCATION_DISABLED"
    | "LOCATION_ARCHIVED"
    | "LOCATION_UNARCHIVED"
    | "DEPARTMENT_CREATED"
    | "DEPARTMENT_UPDATED"
    | "DEPARTMENT_ENABLED"
    | "DEPARTMENT_DISABLED"
    | "DEPARTMENT_ARCHIVED"
    | "DEPARTMENT_UNARCHIVED"
    | "PROVIDER_CREATED"
    | "PROVIDER_UPDATED"
    | "PROVIDER_ENABLED"
    | "PROVIDER_DISABLED"
    | "PROVIDER_ARCHIVED"
    | "PROVIDER_UNARCHIVED"
    | "NPI_ALREADY_EXIST"
    | "PROVIDER_STATUS_UPDATED"
    | "PROVIDER_ARCHIVE_STATUS_UPDATED"
    | "NURSE_CREATED"
    | "NURSE_UPDATED"
    | "PATIENT_CREATED"
    | "PATIENT_UPDATE"
    | "PATIENT_STATUS_UPDATED"
    | "PATIENT_ARCHIVE_STATUS_UPDATED"
    | "PATIENT_UNARCHIVE_STATUS_UPDATED"
    | "PATIENT_ENABLE_DISABLE_RESPONSE"
    | "FAILED_PATIENT_UPDATE"
    | "PATIENT_NOT_FOUND"
    | "USER_MRN_UPDATE_ERROR"
    | "PATIENT_DATA_FETCHED"
    | "PATIENT_DOCUMENT_REMOVED"
    | "UPLOAD_DOC_INVALID_ERROR"
    | "FAILED_PATIENT_STATUS_UPDATE"
    | "PATIENT_ARCHIVE"
    | "FAILED_PATIENT_ARCHIVE"
    | "INVALID_BIRTHDATE"
    | "FAILED_UPDATE_PATIENT_INSURANCE"
    | "ADDED_TO_WAITING_LIST"
    | "PATIENT_ENABLED"
    | "PATIENT_DISABLED"
    | "PATIENT_ARCHIVED"
    | "PATIENT_UNARCHIVED"
    | "TENANT_CONFIGURATION_CREATED"
    | "TENANT_CONFIGURATION_UPDATED"
    | "FEE_AMOUNT_ADDED"
    | "FEE_AMOUNT_UPDATED"
    | "FEE_AMOUNT_STATUS_CHANGED"
    | "FEE_AMOUNT_ALREADY_EXISTS"
    | "FEE_AMOUNT_NOT_FOUND"
    | "FEE_DELETED"
    | "INVALID_MEDICAL_CODE"
    | "INSURANCEPAYER_NOT_FOUND"
    | "INSURANCE_POLICY_NOT_FOUND"
    | "TOO_MANY_INSURANCES"
    | "INSURANCE_NOT_FOUND"
    | "SECONDARY_INSURANCE_NOT_FOUND"
    | "INSURANCETYPE_UPDATED"
    | "CANNOT_UPDATE_INSURANCETYPE"
    | "PATIENT_INSURANCE_UPDATE"
    | "SECONDARY_INSURANCE_REMOVED"
    | "DUPLICATE_INSURANCE_ERROR"
    | "ELIGIBILITY_NOT_ALLOWED"
    | "INTAKE_FORM_ADDED"
    | "INTAKE_FORM_UPDATED"
    | "PATIENT_DOCUMENT_UPLOADED"
    | "REASON_IS_MANDATORY"
    | "CHARGEABLE_IS_MANDATORY"
    | "INTAKE_NEEDED"
    | "CONSENT_FORM_TEMPLATE_ADDED"
    | "CONSENT_FORM_TEMPLATE_UPDATED"
    | "CONSENT_FORM_TEMPLATE_ARCHIVED"
    | "CONSENT_FORM_TEMPLATE_UNARCHIVED"
    | "CONSENT_FORM_TEMPLATE_ENABLE"
    | "CONSENT_FORM_TEMPLATE_DISABLED"
    | "CONSENT_FORM_TEMPLATE_NOT_FOUND"
    | "PATIENT_CONSENT_STATUS_UPDATED"
    | "CONSENT_ARCHIVE_STATUS"
    | "ADDED_AVAILABILITY"
    | "CONSULT_TIME_CONFLICT"
    | "BOOKED_APPOINTMENT_SLOT"
    | "AVAILABILITY_NOT_FOUND"
    | "DAY_SLOT_NOT_FOUND"
    | "SLOT_NOT_FOUND"
    | "INVALID_TIME_DURATION"
    | "PAST_START_TIME"
    | "SLOT_ALREADY_BOOKED"
    | "APPOINTMENT_CREATED"
    | "APPOINTMENT_DATA_FETCHED"
    | "APPOINTMENT_NOT_FOUND"
    | "APPOINTMENT_UPDATED"
    | "APPOINTMENT_CONFIRMED"
    | "NEW_APPT_ALREADY_EXIST"
    | "NEW_APPT_NOT_EXIST"
    | "EXISTING_APPOINTMENT_NOT_FOUND"
    | "RESCHEDULE_NOT_ALLOWED"
    | "APPOINTMENT_RESCHEDULED"
    | "APPOINTMENT_RESCHEDULED_WITH_CHARGE"
    | "CHECKED_IN_NOT_ENABLED"
    | "FOLLOW_UP_APPT_ERROR"
    | "APPT_NOT_COMPLETE_ERROR"
    | "EXISTING_APPT_STATUS_ERROR"
    | "APPOINTMENT_FEE_SET"
    | "APPOINTMENT_FEE_ALREADY_PAID"
    | "NO_SHOW_NOT_ALLOWED"
    | "BILL_AMOUNT"
    | "SEND_MESSAGE_RESPONSE"
    | "EMAIL_SUBJECT_MANDATORY"
    | "PATIENT_PHONE_NOT_PRESENT"
    | "ENCOUNTER_ALREADY_EXIST"
    | "ENCOUNTER_ARCHIVED"
    | "ENCOUNTER_UPDATED"
    | "PATIENT_SCREENER_ADDED"
    | "PATIENTSCREENER_NOT_FOUND"
    | "PATIENT_SCORE_ADDED"
    | "PATIENT_SCREENER_ANSWER_UPDATED"
    | "INVALID_SCREENER_TYPE"
    | "INVALID_ANSWER_OPTION"
    | "INCOMPLETE_SCREENER_ANSWERS"
    | "PATIENT_SCREENER_SCORE_UPDATED"
    | "PATIENT_SCREENER_DATA_FETCHED"
    | "PAYMENT_CARD_ADDED"
    | "PAYMENT_CARD_ALREADY_EXISTS"
    | "PAYMENT_CHARGED"
    | "FINE_CHARGED"
    | "PAYMENT_CARD_NOT_FOUND"
    | "PAYMENT_ALREADY_DONE"
    | "PAYMENT_CARD_NOT_EXISTS"
    | "PAYMENT_AMOUNT_NOT_SET"
    | "PAYMENT_BILL_STATUS_ERROR"
    | "INVALID_CARD_EXPIRATION"
    | "NO_NOTIFICATIONS"
    | "NOTIFICATION_MARKED_AS_SEEN"
    | "NOTIFICATIONS_COUNT"
    | "PATIENT_CONSENT_FORMS_SIGNED"
    | "PATIENT_CONSENT_FORM_NOT_FOUND"
    | "TEXTMACRO_SHORTCUT_EXISTS"
    | "TEXTMACRO_ADDED"
    | "TEXTMACRO_DATA_FETCHED"
    | "TEXTMACRO_UPDATED"
    | "FAILED_UPDATE_TEXT_MACRO"
    | "FAILED_TEXTMACRO_ARCHIVE"
    | "TEXTMACRO_ARCHIVE"
    | "TEXTMACRO_RESTORED"
    | "FAILED_TEXTMACRO_RESTORE"
    | "TEXTMACRO_NOT_EXIST"
    | "TASK_ADDED"
    | "TASK_DATA_FETCHED"
    | "TASK_UPDATED"
    | "TasK_ENABLED"
    | "TasK_DISABLED"
    | "TasK_ARCHIVED"
    | "TasK_UNARCHIVED"
    | "TASK_ASSIGNED"
    | "INVALID_TASK_STATUS"
    | "INVALID_DUEDATE"
    | "FINE_CHARGED_APPOINTMENT"
    | "APPOINTMENT_FINE"
    | "CANNOT_CHARGE_FINE"
    | "PAYMENT_SUCCESSFUL"
    | "VITAL_ADDED"
    | "VITAL_UPDATED"
    | "VITAL_DATA_FETCHED"
    | "VITAL_NOT_FOUND"
    | "FAILED_VITAL_UPDATED"
    | "EMITTED_SUCCESSFULLY"
    | "WEBHOOK_SUCCESSFUL"
    | "BILL_UPDATED"
    | "CLAIM_ADDED"
    | "BOOK_APPOINTMENT_ERROR"
    | "CANCEL_APPOINTMENT_ERROR"
    | "NOT_IMPLEMENTED"
    | "COMMENT_ADDED_SUCCESSFULLY"
    | "COMMENT_UPDATED_SUCCESSFULLY"
    | "COMMENT_DELETED_SUCCESSFULLY"
    | "MEDICAL_CODE_ADDED_SUCCESSFULLY"
    | "MEDICAL_CODE_UPDATED_SUCCESSFULLY"
    | "PROVIDER_REVIEW_ADDED_SUCCESSFULLY"
    | "PROVIDER_REVIEW_STATUS_UPDATED_SUCCESSFULLY"
    | "CHECK_IN_STATUS"
    | "REFILL_RX_ADDED"
    | "REFILL_RX_UPDATED"
    | "ROI_ADDED"
    | "ROI_UPDATED"
    | "ROI_STATUS_UPDATED"
    | "ROI_NOT_FOUND"
    | "INTERNAL_SERVER_ERROR"
    | "FILE_UPLOADED"
    | "EMPTY_FILE"
    | "MEDICAL_CODES_CREATED"
    | "MEDICAL_CODES_UPDATED"
    | "MEDICAL_CODE_ENABLED"
    | "MEDICAL_CODE_DISABLED"
    | "MEDICAL_CODE_ARCHIVED"
    | "MEDICAL_CODE_UNARCHIVED"
    | "PATIENT_DIAGNOSIS_CREATED"
    | "PATIENT_DIAGNOSIS_UPDATED"
    | "PATIENT_DIAGNOSIS_ENABLED"
    | "PATIENT_DIAGNOSIS_DISABLED"
    | "PATIENT_DIAGNOSIS_ARCHIVED"
    | "PATIENT_DIAGNOSIS_UNARCHIVED"
    | "PATIENT_ALLERGY_CREATED"
    | "PATIENT_ALLERGY_UPDATED"
    | "PATIENT_ALLERGY_ENABLED"
    | "PATIENT_ALLERGY_DISABLED"
    | "PATIENT_ALLERGY_ARCHIVED"
    | "PATIENT_ALLERGY_UNARCHIVED"
    | "PATIENT_VACCINE_CREATED"
    | "PATIENT_VACCINE_UPDATED"
    | "PATIENT_VACCINE_ENABLED"
    | "PATIENT_VACCINE_DISABLED"
    | "PATIENT_VACCINE_ARCHIVED"
    | "PATIENT_VACCINE_UNARCHIVED"
    | "PATIENT_VITAL_CREATED"
    | "PATIENT_VITAL_UPDATED"
    | "STICKY_NOTE_CREATED"
    | "STICKY_NOTE_UPDATED"
    | "STICKY_NOTE_ENABLED"
    | "STICKY_NOTE_DISABLED"
    | "STICKY_NOTE_ARCHIVED"
    | "STICKY_NOTE_UNARCHIVED"
    | "PATIENT_MEDICATION_CREATED"
    | "PATIENT_MEDICATION_UPDATED"
    | "PATIENT_MEDICATION_ENABLE_DISABLE_RESPONSE"
    | "PATIENT_MEDICATION_ARCHIVE_STATUS_UPDATED"
    | "PATIENT_MEDICATION_ARCHIVED"
    | "PATIENT_MEDICATION_UNARCHIVED"
    | "PATIENT_MEDICAL_HISTORY_CREATED"
    | "PATIENT_MEDICAL_HISTORY_UPDATED"
    | "PATIENT_MEDICAL_HISTORY_ENABLE_DISABLE_RESPONSE"
    | "PATIENT_MEDICAL_HISTORY_ARCHIVE_STATUS_UPDATED"
    | "PATIENT_SURGICAL_HISTORY_CREATED"
    | "PATIENT_SURGICAL_HISTORY_UPDATED"
    | "PATIENT_SURGICAL_HISTORY_ENABLE_DISABLE_RESPONSE"
    | "PATIENT_SURGICAL_HISTORY_ARCHIVE_STATUS_UPDATED"
    | "PATIENT_FAMILY_HISTORY_CREATED"
    | "PATIENT_FAMILY_HISTORY_UPDATED"
    | "PATIENT_FAMILY_HISTORY_ENABLE_DISABLE_RESPONSE"
    | "PATIENT_FAMILY_HISTORY_ARCHIVE_STATUS_UPDATED"
    | "PATIENT_SOCIAL_HISTORY_CREATED"
    | "PATIENT_SOCIAL_HISTORY_UPDATED"
    | "PATIENT_SOCIAL_HISTORY_ENABLE_DISABLE_RESPONSE"
    | "PATIENT_SOCIAL_HISTORY_ARCHIVE_STATUS_UPDATED"
    | "PATIENT_MEDICATION_CREATED_SUCCESSFULLY"
    | "PATIENT_MEDICATION_UPDATED_SUCCESSFULLY"
    | "DOCUMENT_TAG_CREATED"
    | "DOCUMENT_TAG_UPDATED"
    | "DOCUMENT_TAG_ENABLED"
    | "DOCUMENT_TAG_DISABLED"
    | "DOCUMENT_TAG_ARCHIVED"
    | "DOCUMENT_TAG_UNARCHIVED"
    | "PATIENT_LAB_ORDER_CREATED"
    | "PATIENT_LAB_ORDER_UPDATED"
    | "PATIENT_LAB_ORDER_NOT_FOUND"
    | "PATIENT_LAB_ORDER_ENABLED"
    | "PATIENT_LAB_ORDER_DISABLED"
    | "PATIENT_LAB_ORDER_ARCHIVED"
    | "PATIENT_LAB_ORDER_UNARCHIVED"
    | "CLINICAL_NOTE_CREATED"
    | "CLINICAL_NOTE_UPDATED"
    | "CLINICAL_NOTE_NOT_FOUND"
    | "CLINICAL_NOTE_ENABLED"
    | "CLINICAL_NOTE_DISABLED"
    | "CLINICAL_NOTE_ARCHIVED"
    | "CLINICAL_NOTE_UNARCHIVED"
    | "USER_DOCUMENT_UPLOAD"
    | "ROLE_ADDED"
    | "PRIVILEGE_NOT_FOUND"
    | "ROLE_UPDATED"
    | "ROLE_NOT_FOUND"
    | "CUSTOM_FORM_CREATED"
    | "CUSTOM_FORM_STATUS_UPDATED"
    | "CUSTOM_FORM_UPDATED"
    | "CUSTOM_FORM_ENABLED"
    | "CUSTOM_FORM_DISABLED"
    | "CUSTOM_FORM_ARCHIVED"
    | "CUSTOM_FORM_RESTORED"
    | "CUSTOM_FORM_COPY"
    | "CUSTOM_FORM_TEMPLATE_CREATED"
    | "CUSTOM_FORM_TEMPLATE_STATUS_UPDATED"
    | "CUSTOM_FORM_TEMPLATE_UPDATED"
    | "CUSTOM_FORM_TEMPLATE_ENABLED"
    | "CUSTOM_FORM_TEMPLATE_DISABLED"
    | "CUSTOM_FORM_TEMPLATE_ARCHIVED"
    | "CUSTOM_FORM_TEMPLATE_RESTORED"
    | "MICROS_FORM_CREATED"
    | "MICROS_FORM_UPDATED"
    | "MICROS_FORM_STATUS_UPDATED"
    | "MICROS_FORM_ARCHIVE_STATUS_UPDATED"
    | "VISIT_NOTE_FORM_CREATED"
    | "VISIT_NOTE_FORM_UPDATED"
    | "VISIT_NOTE_FORM_STATUS_UPDATED"
    | "VISIT_NOTE_FORM_ARCHIVE_STATUS_UPDATED"
    | "REVIEW_OF_SYSTEM_FORM_CREATED"
    | "REVIEW_OF_SYSTEM_FORM_UPDATED"
    | "REVIEW_OF_SYSTEM_FORM_STATUS_UPDATED"
    | "REVIEW_OF_SYSTEM_FORM_ARCHIVE_STATUS_UPDATED"
    | "CUSTOM_QUESTIONNAIRE_FORM_CREATED"
    | "CUSTOM_QUESTIONNAIRE_FORM_UPDATED"
    | "CUSTOM_QUESTIONNAIRE_FORM_STATUS_UPDATED"
    | "CUSTOM_QUESTIONNAIRE_FORM_ARCHIVE_STATUS_UPDATED"
    | "CAREPLAN_FORM_CREATED"
    | "CAREPLAN_FORM_UPDATED"
    | "CAREPLAN_FORM_STATUS_UPDATED"
    | "CAREPLAN_FORM_ARCHIVE_STATUS_UPDATED"
    | "ANNOTABLE_IMAGE_FORM_CREATED"
    | "ANNOTABLE_IMAGE_FORM_UPDATED"
    | "ANNOTABLE_IMAGE_FORM_STATUS_UPDATED"
    | "ANNOTABLE_IMAGE_FORM_ARCHIVE_STATUS_UPDATED"
    | "ORDER_SET_FORM_CREATED"
    | "ORDER_SET_FORM_UPDATED"
    | "ORDER_SET_FORM_STATUS_UPDATED"
    | "ORDER_SET_FORM_ARCHIVE_STATUS_UPDATED"
    | "PHYSICAL_EXAM_FORM_CREATED"
    | "PHYSICAL_EXAM_FORM_UPDATED"
    | "PHYSICAL_EXAM_FORM_STATUS_UPDATED"
    | "PHYSICAL_EXAM_FORM_ARCHIVE_STATUS_UPDATED"
    | "PATIENT_VITAL_CREATED_SUCCESSFULLY"
    | "PATIENT_VITAL_UPDATED_SUCCESSFULLY"
    | "CHECK_CONSULT_TIME";
  message?: {
    [key: string]: unknown;
  };
  data?: {
    [key: string]: unknown;
  };
  errors?: {
    [key: string]: string;
  };
  path?: string;
  requestId?: string;
  version?: string;
};

export type code =
  | "INTERNAL_ERROR"
  | "ACCESS_DENIED"
  | "BAD_REQUEST"
  | "NOT_FOUND"
  | "CREATED"
  | "UNSUPPORTED_MEDIA_TYPE"
  | "OK"
  | "UNAUTHORIZED"
  | "SERVICE_UNAVAILABLE"
  | "ENTITY"
  | "DB_ERROR"
  | "IAM_ERROR"
  | "AWS_ERROR"
  | "USER_ARCHIVED"
  | "USER_UNARCHIVED"
  | "USER_NOT_EXIST"
  | "BILLING_INVOICE_STATEMENT"
  | "INVALID_CREDENTIALS"
  | "LOGIN_FAILED"
  | "INVALID_REFRESH_TOKEN"
  | "LOGOUT_RESPONSE"
  | "LOGOUT_FAILED"
  | "SET_PASSWORD_RESPONSE"
  | "INVALID_PASSWORD_LINK"
  | "INVALID_PASSWORD"
  | "RESET_PASSWORD_FAILED"
  | "CHANGE_PASSWORD_RESPONSE"
  | "VERIFY_PASSWORD_LINK_RESPONSE"
  | "FORGOT_PASSWORD_RESPONSE"
  | "RESEND_INVITE_EMAIL_RESPONSE"
  | "USER_CREATED"
  | "USER_NOT_FOUND"
  | "USER_EMAIL_NOT_FOUND"
  | "UPDATE_USER_PROFILE_RESPONSE"
  | "USER_ENABLED"
  | "USER_DISABLED"
  | "DUPLICATE_EMAIL_ERROR"
  | "CHANGE_AVATAR_RESPONSE"
  | "USER_EMAIL_REQUIRED"
  | "USER_EMAIL_UPDATE_ERROR"
  | "INVALID_USER_ROLE"
  | "USER_EMAIL_VERIFIED"
  | "SIGNED_UP"
  | "USER_INACTIVE"
  | "EMPTY_EMAIL"
  | "MAIL_SENT_SUCCESSFULLY"
  | "RESEND_OTP"
  | "INVALID_OTP"
  | "PROVIDER_GROUP_CREATED"
  | "PROVIDER_GROUP_UPDATED"
  | "FAILED_UPDATE_PROVIDER_GROUP"
  | "PROVIDER_GROUP_ENABLED"
  | "PROVIDER_GROUP_DISABLED"
  | "PROVIDER_GROUP_ARCHIVED"
  | "PROVIDER_GROUP_UNARCHIVED"
  | "LOCATION_CREATED"
  | "LOCATION_UPDATED"
  | "LOCATION_NOT_FOUND"
  | "LOCATION_ENABLED"
  | "LOCATION_DISABLED"
  | "LOCATION_ARCHIVED"
  | "LOCATION_UNARCHIVED"
  | "DEPARTMENT_CREATED"
  | "DEPARTMENT_UPDATED"
  | "DEPARTMENT_ENABLED"
  | "DEPARTMENT_DISABLED"
  | "DEPARTMENT_ARCHIVED"
  | "DEPARTMENT_UNARCHIVED"
  | "PROVIDER_CREATED"
  | "PROVIDER_UPDATED"
  | "PROVIDER_ENABLED"
  | "PROVIDER_DISABLED"
  | "PROVIDER_ARCHIVED"
  | "PROVIDER_UNARCHIVED"
  | "NPI_ALREADY_EXIST"
  | "PROVIDER_STATUS_UPDATED"
  | "PROVIDER_ARCHIVE_STATUS_UPDATED"
  | "NURSE_CREATED"
  | "NURSE_UPDATED"
  | "PATIENT_CREATED"
  | "PATIENT_UPDATE"
  | "PATIENT_STATUS_UPDATED"
  | "PATIENT_ARCHIVE_STATUS_UPDATED"
  | "PATIENT_UNARCHIVE_STATUS_UPDATED"
  | "PATIENT_ENABLE_DISABLE_RESPONSE"
  | "FAILED_PATIENT_UPDATE"
  | "PATIENT_NOT_FOUND"
  | "USER_MRN_UPDATE_ERROR"
  | "PATIENT_DATA_FETCHED"
  | "PATIENT_DOCUMENT_REMOVED"
  | "UPLOAD_DOC_INVALID_ERROR"
  | "FAILED_PATIENT_STATUS_UPDATE"
  | "PATIENT_ARCHIVE"
  | "FAILED_PATIENT_ARCHIVE"
  | "INVALID_BIRTHDATE"
  | "FAILED_UPDATE_PATIENT_INSURANCE"
  | "ADDED_TO_WAITING_LIST"
  | "PATIENT_ENABLED"
  | "PATIENT_DISABLED"
  | "PATIENT_ARCHIVED"
  | "PATIENT_UNARCHIVED"
  | "TENANT_CONFIGURATION_CREATED"
  | "TENANT_CONFIGURATION_UPDATED"
  | "FEE_AMOUNT_ADDED"
  | "FEE_AMOUNT_UPDATED"
  | "FEE_AMOUNT_STATUS_CHANGED"
  | "FEE_AMOUNT_ALREADY_EXISTS"
  | "FEE_AMOUNT_NOT_FOUND"
  | "FEE_DELETED"
  | "INVALID_MEDICAL_CODE"
  | "INSURANCEPAYER_NOT_FOUND"
  | "INSURANCE_POLICY_NOT_FOUND"
  | "TOO_MANY_INSURANCES"
  | "INSURANCE_NOT_FOUND"
  | "SECONDARY_INSURANCE_NOT_FOUND"
  | "INSURANCETYPE_UPDATED"
  | "CANNOT_UPDATE_INSURANCETYPE"
  | "PATIENT_INSURANCE_UPDATE"
  | "SECONDARY_INSURANCE_REMOVED"
  | "DUPLICATE_INSURANCE_ERROR"
  | "ELIGIBILITY_NOT_ALLOWED"
  | "INTAKE_FORM_ADDED"
  | "INTAKE_FORM_UPDATED"
  | "PATIENT_DOCUMENT_UPLOADED"
  | "REASON_IS_MANDATORY"
  | "CHARGEABLE_IS_MANDATORY"
  | "INTAKE_NEEDED"
  | "CONSENT_FORM_TEMPLATE_ADDED"
  | "CONSENT_FORM_TEMPLATE_UPDATED"
  | "CONSENT_FORM_TEMPLATE_ARCHIVED"
  | "CONSENT_FORM_TEMPLATE_UNARCHIVED"
  | "CONSENT_FORM_TEMPLATE_ENABLE"
  | "CONSENT_FORM_TEMPLATE_DISABLED"
  | "CONSENT_FORM_TEMPLATE_NOT_FOUND"
  | "PATIENT_CONSENT_STATUS_UPDATED"
  | "CONSENT_ARCHIVE_STATUS"
  | "ADDED_AVAILABILITY"
  | "CONSULT_TIME_CONFLICT"
  | "BOOKED_APPOINTMENT_SLOT"
  | "AVAILABILITY_NOT_FOUND"
  | "DAY_SLOT_NOT_FOUND"
  | "SLOT_NOT_FOUND"
  | "INVALID_TIME_DURATION"
  | "PAST_START_TIME"
  | "SLOT_ALREADY_BOOKED"
  | "APPOINTMENT_CREATED"
  | "APPOINTMENT_DATA_FETCHED"
  | "APPOINTMENT_NOT_FOUND"
  | "APPOINTMENT_UPDATED"
  | "APPOINTMENT_CONFIRMED"
  | "NEW_APPT_ALREADY_EXIST"
  | "NEW_APPT_NOT_EXIST"
  | "EXISTING_APPOINTMENT_NOT_FOUND"
  | "RESCHEDULE_NOT_ALLOWED"
  | "APPOINTMENT_RESCHEDULED"
  | "APPOINTMENT_RESCHEDULED_WITH_CHARGE"
  | "CHECKED_IN_NOT_ENABLED"
  | "FOLLOW_UP_APPT_ERROR"
  | "APPT_NOT_COMPLETE_ERROR"
  | "EXISTING_APPT_STATUS_ERROR"
  | "APPOINTMENT_FEE_SET"
  | "APPOINTMENT_FEE_ALREADY_PAID"
  | "NO_SHOW_NOT_ALLOWED"
  | "BILL_AMOUNT"
  | "SEND_MESSAGE_RESPONSE"
  | "EMAIL_SUBJECT_MANDATORY"
  | "PATIENT_PHONE_NOT_PRESENT"
  | "ENCOUNTER_ALREADY_EXIST"
  | "ENCOUNTER_ARCHIVED"
  | "ENCOUNTER_UPDATED"
  | "PATIENT_SCREENER_ADDED"
  | "PATIENTSCREENER_NOT_FOUND"
  | "PATIENT_SCORE_ADDED"
  | "PATIENT_SCREENER_ANSWER_UPDATED"
  | "INVALID_SCREENER_TYPE"
  | "INVALID_ANSWER_OPTION"
  | "INCOMPLETE_SCREENER_ANSWERS"
  | "PATIENT_SCREENER_SCORE_UPDATED"
  | "PATIENT_SCREENER_DATA_FETCHED"
  | "PAYMENT_CARD_ADDED"
  | "PAYMENT_CARD_ALREADY_EXISTS"
  | "PAYMENT_CHARGED"
  | "FINE_CHARGED"
  | "PAYMENT_CARD_NOT_FOUND"
  | "PAYMENT_ALREADY_DONE"
  | "PAYMENT_CARD_NOT_EXISTS"
  | "PAYMENT_AMOUNT_NOT_SET"
  | "PAYMENT_BILL_STATUS_ERROR"
  | "INVALID_CARD_EXPIRATION"
  | "NO_NOTIFICATIONS"
  | "NOTIFICATION_MARKED_AS_SEEN"
  | "NOTIFICATIONS_COUNT"
  | "PATIENT_CONSENT_FORMS_SIGNED"
  | "PATIENT_CONSENT_FORM_NOT_FOUND"
  | "TEXTMACRO_SHORTCUT_EXISTS"
  | "TEXTMACRO_ADDED"
  | "TEXTMACRO_DATA_FETCHED"
  | "TEXTMACRO_UPDATED"
  | "FAILED_UPDATE_TEXT_MACRO"
  | "FAILED_TEXTMACRO_ARCHIVE"
  | "TEXTMACRO_ARCHIVE"
  | "TEXTMACRO_RESTORED"
  | "FAILED_TEXTMACRO_RESTORE"
  | "TEXTMACRO_NOT_EXIST"
  | "TASK_ADDED"
  | "TASK_DATA_FETCHED"
  | "TASK_UPDATED"
  | "TasK_ENABLED"
  | "TasK_DISABLED"
  | "TasK_ARCHIVED"
  | "TasK_UNARCHIVED"
  | "TASK_ASSIGNED"
  | "INVALID_TASK_STATUS"
  | "INVALID_DUEDATE"
  | "FINE_CHARGED_APPOINTMENT"
  | "APPOINTMENT_FINE"
  | "CANNOT_CHARGE_FINE"
  | "PAYMENT_SUCCESSFUL"
  | "VITAL_ADDED"
  | "VITAL_UPDATED"
  | "VITAL_DATA_FETCHED"
  | "VITAL_NOT_FOUND"
  | "FAILED_VITAL_UPDATED"
  | "EMITTED_SUCCESSFULLY"
  | "WEBHOOK_SUCCESSFUL"
  | "BILL_UPDATED"
  | "CLAIM_ADDED"
  | "BOOK_APPOINTMENT_ERROR"
  | "CANCEL_APPOINTMENT_ERROR"
  | "NOT_IMPLEMENTED"
  | "COMMENT_ADDED_SUCCESSFULLY"
  | "COMMENT_UPDATED_SUCCESSFULLY"
  | "COMMENT_DELETED_SUCCESSFULLY"
  | "MEDICAL_CODE_ADDED_SUCCESSFULLY"
  | "MEDICAL_CODE_UPDATED_SUCCESSFULLY"
  | "PROVIDER_REVIEW_ADDED_SUCCESSFULLY"
  | "PROVIDER_REVIEW_STATUS_UPDATED_SUCCESSFULLY"
  | "CHECK_IN_STATUS"
  | "REFILL_RX_ADDED"
  | "REFILL_RX_UPDATED"
  | "ROI_ADDED"
  | "ROI_UPDATED"
  | "ROI_STATUS_UPDATED"
  | "ROI_NOT_FOUND"
  | "INTERNAL_SERVER_ERROR"
  | "FILE_UPLOADED"
  | "EMPTY_FILE"
  | "MEDICAL_CODES_CREATED"
  | "MEDICAL_CODES_UPDATED"
  | "MEDICAL_CODE_ENABLED"
  | "MEDICAL_CODE_DISABLED"
  | "MEDICAL_CODE_ARCHIVED"
  | "MEDICAL_CODE_UNARCHIVED"
  | "PATIENT_DIAGNOSIS_CREATED"
  | "PATIENT_DIAGNOSIS_UPDATED"
  | "PATIENT_DIAGNOSIS_ENABLED"
  | "PATIENT_DIAGNOSIS_DISABLED"
  | "PATIENT_DIAGNOSIS_ARCHIVED"
  | "PATIENT_DIAGNOSIS_UNARCHIVED"
  | "PATIENT_ALLERGY_CREATED"
  | "PATIENT_ALLERGY_UPDATED"
  | "PATIENT_ALLERGY_ENABLED"
  | "PATIENT_ALLERGY_DISABLED"
  | "PATIENT_ALLERGY_ARCHIVED"
  | "PATIENT_ALLERGY_UNARCHIVED"
  | "PATIENT_VACCINE_CREATED"
  | "PATIENT_VACCINE_UPDATED"
  | "PATIENT_VACCINE_ENABLED"
  | "PATIENT_VACCINE_DISABLED"
  | "PATIENT_VACCINE_ARCHIVED"
  | "PATIENT_VACCINE_UNARCHIVED"
  | "PATIENT_VITAL_CREATED"
  | "PATIENT_VITAL_UPDATED"
  | "STICKY_NOTE_CREATED"
  | "STICKY_NOTE_UPDATED"
  | "STICKY_NOTE_ENABLED"
  | "STICKY_NOTE_DISABLED"
  | "STICKY_NOTE_ARCHIVED"
  | "STICKY_NOTE_UNARCHIVED"
  | "PATIENT_MEDICATION_CREATED"
  | "PATIENT_MEDICATION_UPDATED"
  | "PATIENT_MEDICATION_ENABLE_DISABLE_RESPONSE"
  | "PATIENT_MEDICATION_ARCHIVE_STATUS_UPDATED"
  | "PATIENT_MEDICATION_ARCHIVED"
  | "PATIENT_MEDICATION_UNARCHIVED"
  | "PATIENT_MEDICAL_HISTORY_CREATED"
  | "PATIENT_MEDICAL_HISTORY_UPDATED"
  | "PATIENT_MEDICAL_HISTORY_ENABLE_DISABLE_RESPONSE"
  | "PATIENT_MEDICAL_HISTORY_ARCHIVE_STATUS_UPDATED"
  | "PATIENT_SURGICAL_HISTORY_CREATED"
  | "PATIENT_SURGICAL_HISTORY_UPDATED"
  | "PATIENT_SURGICAL_HISTORY_ENABLE_DISABLE_RESPONSE"
  | "PATIENT_SURGICAL_HISTORY_ARCHIVE_STATUS_UPDATED"
  | "PATIENT_FAMILY_HISTORY_CREATED"
  | "PATIENT_FAMILY_HISTORY_UPDATED"
  | "PATIENT_FAMILY_HISTORY_ENABLE_DISABLE_RESPONSE"
  | "PATIENT_FAMILY_HISTORY_ARCHIVE_STATUS_UPDATED"
  | "PATIENT_SOCIAL_HISTORY_CREATED"
  | "PATIENT_SOCIAL_HISTORY_UPDATED"
  | "PATIENT_SOCIAL_HISTORY_ENABLE_DISABLE_RESPONSE"
  | "PATIENT_SOCIAL_HISTORY_ARCHIVE_STATUS_UPDATED"
  | "PATIENT_MEDICATION_CREATED_SUCCESSFULLY"
  | "PATIENT_MEDICATION_UPDATED_SUCCESSFULLY"
  | "DOCUMENT_TAG_CREATED"
  | "DOCUMENT_TAG_UPDATED"
  | "DOCUMENT_TAG_ENABLED"
  | "DOCUMENT_TAG_DISABLED"
  | "DOCUMENT_TAG_ARCHIVED"
  | "DOCUMENT_TAG_UNARCHIVED"
  | "PATIENT_LAB_ORDER_CREATED"
  | "PATIENT_LAB_ORDER_UPDATED"
  | "PATIENT_LAB_ORDER_NOT_FOUND"
  | "PATIENT_LAB_ORDER_ENABLED"
  | "PATIENT_LAB_ORDER_DISABLED"
  | "PATIENT_LAB_ORDER_ARCHIVED"
  | "PATIENT_LAB_ORDER_UNARCHIVED"
  | "CLINICAL_NOTE_CREATED"
  | "CLINICAL_NOTE_UPDATED"
  | "CLINICAL_NOTE_NOT_FOUND"
  | "CLINICAL_NOTE_ENABLED"
  | "CLINICAL_NOTE_DISABLED"
  | "CLINICAL_NOTE_ARCHIVED"
  | "CLINICAL_NOTE_UNARCHIVED"
  | "USER_DOCUMENT_UPLOAD"
  | "ROLE_ADDED"
  | "PRIVILEGE_NOT_FOUND"
  | "ROLE_UPDATED"
  | "ROLE_NOT_FOUND"
  | "CUSTOM_FORM_CREATED"
  | "CUSTOM_FORM_STATUS_UPDATED"
  | "CUSTOM_FORM_UPDATED"
  | "CUSTOM_FORM_ENABLED"
  | "CUSTOM_FORM_DISABLED"
  | "CUSTOM_FORM_ARCHIVED"
  | "CUSTOM_FORM_RESTORED"
  | "CUSTOM_FORM_COPY"
  | "CUSTOM_FORM_TEMPLATE_CREATED"
  | "CUSTOM_FORM_TEMPLATE_STATUS_UPDATED"
  | "CUSTOM_FORM_TEMPLATE_UPDATED"
  | "CUSTOM_FORM_TEMPLATE_ENABLED"
  | "CUSTOM_FORM_TEMPLATE_DISABLED"
  | "CUSTOM_FORM_TEMPLATE_ARCHIVED"
  | "CUSTOM_FORM_TEMPLATE_RESTORED"
  | "MICROS_FORM_CREATED"
  | "MICROS_FORM_UPDATED"
  | "MICROS_FORM_STATUS_UPDATED"
  | "MICROS_FORM_ARCHIVE_STATUS_UPDATED"
  | "VISIT_NOTE_FORM_CREATED"
  | "VISIT_NOTE_FORM_UPDATED"
  | "VISIT_NOTE_FORM_STATUS_UPDATED"
  | "VISIT_NOTE_FORM_ARCHIVE_STATUS_UPDATED"
  | "REVIEW_OF_SYSTEM_FORM_CREATED"
  | "REVIEW_OF_SYSTEM_FORM_UPDATED"
  | "REVIEW_OF_SYSTEM_FORM_STATUS_UPDATED"
  | "REVIEW_OF_SYSTEM_FORM_ARCHIVE_STATUS_UPDATED"
  | "CUSTOM_QUESTIONNAIRE_FORM_CREATED"
  | "CUSTOM_QUESTIONNAIRE_FORM_UPDATED"
  | "CUSTOM_QUESTIONNAIRE_FORM_STATUS_UPDATED"
  | "CUSTOM_QUESTIONNAIRE_FORM_ARCHIVE_STATUS_UPDATED"
  | "CAREPLAN_FORM_CREATED"
  | "CAREPLAN_FORM_UPDATED"
  | "CAREPLAN_FORM_STATUS_UPDATED"
  | "CAREPLAN_FORM_ARCHIVE_STATUS_UPDATED"
  | "ANNOTABLE_IMAGE_FORM_CREATED"
  | "ANNOTABLE_IMAGE_FORM_UPDATED"
  | "ANNOTABLE_IMAGE_FORM_STATUS_UPDATED"
  | "ANNOTABLE_IMAGE_FORM_ARCHIVE_STATUS_UPDATED"
  | "ORDER_SET_FORM_CREATED"
  | "ORDER_SET_FORM_UPDATED"
  | "ORDER_SET_FORM_STATUS_UPDATED"
  | "ORDER_SET_FORM_ARCHIVE_STATUS_UPDATED"
  | "PHYSICAL_EXAM_FORM_CREATED"
  | "PHYSICAL_EXAM_FORM_UPDATED"
  | "PHYSICAL_EXAM_FORM_STATUS_UPDATED"
  | "PHYSICAL_EXAM_FORM_ARCHIVE_STATUS_UPDATED"
  | "PATIENT_VITAL_CREATED_SUCCESSFULLY"
  | "PATIENT_VITAL_UPDATED_SUCCESSFULLY"
  | "CHECK_CONSULT_TIME";

export type Address = {
  line1: string;
  line2?: string;
  city: string;
  state: string;
  country: string;
  zipcode: string;
};

export type User = {
  uuid?: string;
  iamId?: string;
  email?: string;
  firstName: string;
  lastName: string;
  middleName?: string;
  phone: string;
  gender: "MALE" | "FEMALE" | "OTHER";
  readonly avatar?: string;
  birthDate?: string;
  roleType?: "PROVIDER" | "STAFF" | "PATIENT";
  role:
    | "SUPER_ADMIN"
    | "FRONTDESK"
    | "BILLER"
    | "NURSE"
    | "PATIENT"
    | "ANONYMOUS"
    | "PROVIDER_GROUP_ADMIN"
    | "ADMIN"
    | "SITE_ADMIN"
    | "PROVIDER";
  address?: Address;
  lastLogin?: string;
  active?: boolean;
  readonly archive?: boolean;
  readonly emailVerified?: boolean;
  readonly phoneVerified?: boolean;
  password?: string;
  tenantKey?: string;
  acceptTerms?: boolean;
  locationId?: string;
  locationName?: string;
};

export type gender = "MALE" | "FEMALE" | "OTHER";

export type roleType = "PROVIDER" | "STAFF" | "PATIENT";

export type role =
  | "SUPER_ADMIN"
  | "FRONTDESK"
  | "BILLER"
  | "NURSE"
  | "PATIENT"
  | "ANONYMOUS"
  | "PROVIDER_GROUP_ADMIN"
  | "ADMIN"
  | "SITE_ADMIN"
  | "PROVIDER";

export type Privilege = {
  id: number;
  name?: string;
  description?: string;
  module?: string;
};

export type Role = {
  id?: number;
  name: string;
  type: string;
  privileges?: Privilege[];
};

export type LicenseState = {
  id?: number;
  country?: string;
  state?: string;
};

export type Provider = {
  uuid?: string;
  providerType?:
    | "MD"
    | "PA"
    | "PSYD"
    | "LCSW"
    | "NP"
    | "RN"
    | "BHNP"
    | "FNP"
    | "RD"
    | "NONE"
    | "UNKNOWN"
    | "NPS";
  email: string;
  firstName: string;
  lastName: string;
  phone: string;
  videoLink?: string;
  avatar?: string;
  role:
    | "SUPER_ADMIN"
    | "FRONTDESK"
    | "BILLER"
    | "NURSE"
    | "PATIENT"
    | "ANONYMOUS"
    | "PROVIDER_GROUP_ADMIN"
    | "ADMIN"
    | "SITE_ADMIN"
    | "PROVIDER";
  active?: boolean;
  archive?: boolean;
  gender: "MALE" | "FEMALE" | "OTHER";
  npi: string;
  introduction?: string;
  chatbotTone?: "PROFESSIONAL" | "FRIENDLY" | "CASUAL";
  providerLicenseDetails?: ProviderLicenseDetails[];
  emailVerified?: boolean;
  acceptTerms?: boolean;
  address: Address;
};

export type providerType =
  | "MD"
  | "PA"
  | "PSYD"
  | "LCSW"
  | "NP"
  | "RN"
  | "BHNP"
  | "FNP"
  | "RD"
  | "NONE"
  | "UNKNOWN"
  | "NPS";

export type chatbotTone = "PROFESSIONAL" | "FRIENDLY" | "CASUAL";

export type ProviderLicenseDetails = {
  uuid?: string;
  licenseNumber?: string;
  expiryDate?: string;
  licensedStates?: LicenseState[];
};

export type ChangeAvatarRequest = {
  newAvatar?: string;
};

export type ProviderGroup = {
  uuid?: string;
  name: string;
  schema?: string;
  subdomain: string;
  phone: string;
  npi: string;
  email: string;
  timezone?: string;
  address: Address;
  active?: boolean;
  archive?: boolean;
  avatar?: string;
};

export type EmergencyContact = {
  uuid?: string;
  firstName?: string;
  lastName?: string;
  phone?: string;
};

export type Patient = {
  uuid?: string;
  firstName: string;
  lastName: string;
  email: string;
  mobileNumber?: string;
  gender?: "MALE" | "FEMALE" | "OTHER";
  middleName?: string;
  mrn?: string;
  birthDate?: string;
  avatar?: string;
  providerId: {
    [key: string]: string;
  };
  nurseId: {
    [key: string]: string;
  };
  schemaType: "INTERNAL" | "EXTERNAL";
  address?: Address;
  signature?: string;
  signatureChanged?: boolean;
  emergencyContact?: EmergencyContact;
  consentFormSigned?: boolean;
  acceptTerms?: boolean;
  source?: string;
  providerNpi?: string;
  nurseNpi?: string;
  emailVerified?: boolean;
  active?: boolean;
  archive?: boolean;
};

export type schemaType = "INTERNAL" | "EXTERNAL";

export type Note = {
  uuid?: string;
  name?: string;
  goalProgress?:
    | "NOT_STARTED"
    | "PROGRESSING"
    | "COMPLETED"
    | "ON_HOLD"
    | "CANCELLED";
};

export type goalProgress =
  | "NOT_STARTED"
  | "PROGRESSING"
  | "COMPLETED"
  | "ON_HOLD"
  | "CANCELLED";

export type PatientVital = {
  uuid?: string;
  patientId: string;
  vitalName: string;
  value1: number;
  value2?: number;
  recordedDate: string;
  unit?: string;
  integrationId?: string;
  heartRate?: number;
  integrationType?: "DEVICE" | "EHR" | "MANUAL";
  note?: Note;
};

export type integrationType = "DEVICE" | "EHR" | "MANUAL";

export type PatientMedication = {
  uuid?: string;
  patient: {
    [key: string]: string;
  };
  medicineName: string;
  direction?: string;
  startDate?: string;
  endDate?: string;
  duration?: string;
  quantity?: string;
  note?: string;
  active?: boolean;
  archive?: boolean;
};

export type PatientAllergy = {
  uuid?: string;
  patient: {
    [key: string]: string;
  };
  allergyType: "DRUG" | "FOOD" | "ENVIRONMENT" | "OTHER";
  name: string;
  reaction?:
    | "PAIN"
    | "RUNNY_NOSE"
    | "SWELLING"
    | "BLOATING"
    | "VOMITING"
    | "RASHES"
    | "ITCHY_NOSE"
    | "THROAT_CLOSING"
    | "COUGH"
    | "REDNESS";
  severity?: "MILD" | "HIGH" | "MODERATE";
  imported?: boolean;
  onSetDate?: string;
  recordedDate?: string;
  active?: boolean;
  archive?: boolean;
};

export type allergyType = "DRUG" | "FOOD" | "ENVIRONMENT" | "OTHER";

export type reaction =
  | "PAIN"
  | "RUNNY_NOSE"
  | "SWELLING"
  | "BLOATING"
  | "VOMITING"
  | "RASHES"
  | "ITCHY_NOSE"
  | "THROAT_CLOSING"
  | "COUGH"
  | "REDNESS";

export type severity = "MILD" | "HIGH" | "MODERATE";

export type MedicalCode = {
  uuid?: string;
  type: "ICD" | "CPT" | "PATIENT";
  code: string;
  description?: string;
  source?: number;
  active?: boolean;
  archive?: boolean;
  errorMessage?: string;
};

export type type = "ICD" | "CPT" | "PATIENT";

export type Location = {
  uuid?: string;
  name: string;
  locationId?: string;
  phone: string;
  timezone?: string;
  email: string;
  address: Address;
  locationHours?: LocationHour[];
  active?: boolean;
  archive?: boolean;
};

export type LocationHour = {
  dayOfWeek?:
    | "MONDAY"
    | "TUESDAY"
    | "WEDNESDAY"
    | "THURSDAY"
    | "FRIDAY"
    | "SATURDAY"
    | "SUNDAY";
  openingTime?: string;
  closingTime?: string;
};

export type dayOfWeek =
  | "MONDAY"
  | "TUESDAY"
  | "WEDNESDAY"
  | "THURSDAY"
  | "FRIDAY"
  | "SATURDAY"
  | "SUNDAY";

export type ConsentFormTemplate = {
  uuid?: string;
  name: string;
  document: string;
  active?: boolean;
  archive?: boolean;
  changeConsent?: boolean;
};

export type ResetPasswordRequest = {
  newPassword: string;
  email: string;
  otp: string;
};

export type AvailabilitySetting = {
  providerId: string;
  bookingWindow: number;
  timezone:
    | "PST"
    | "EST"
    | "CST"
    | "MST"
    | "AST"
    | "HST"
    | "EDT"
    | "PDT"
    | "CDT"
    | "ADT"
    | "MDT"
    | "IST"
    | "AKDT"
    | "AKST";
  initialConsultTime: number;
  followupConsultTime: number;
  bufferTime?: number;
  bookBefore?: string;
  blockDays?: BlockDay[];
  daySlots?: DaySlot[];
};

export type timezone =
  | "PST"
  | "EST"
  | "CST"
  | "MST"
  | "AST"
  | "HST"
  | "EDT"
  | "PDT"
  | "CDT"
  | "ADT"
  | "MDT"
  | "IST"
  | "AKDT"
  | "AKST";

export type BlockDay = {
  startTime?: string;
  endTime?: string;
};

export type DaySlot = {
  day?:
    | "MONDAY"
    | "TUESDAY"
    | "WEDNESDAY"
    | "THURSDAY"
    | "FRIDAY"
    | "SATURDAY"
    | "SUNDAY";
  startTime?: LocalTime;
  endTime?: LocalTime;
};

export type day =
  | "MONDAY"
  | "TUESDAY"
  | "WEDNESDAY"
  | "THURSDAY"
  | "FRIDAY"
  | "SATURDAY"
  | "SUNDAY";

export type LocalTime = {
  hour?: number;
  minute?: number;
  second?: number;
  nano?: number;
};

export type PatientVitalRequest = {
  patientId: string;
  patientVital?: PatientVital[];
};

export type PatientConsentForm = {
  uuid?: string;
  patientUuid: string;
  patientName?: string;
  signature?: string;
  consentFormTemplate: ConsentFormTemplate;
};

export type LogoutRequest = {
  refreshToken: string;
};

export type LoginRequest = {
  username: string;
  password: string;
};

export type ChangePasswordRequest = {
  oldPassword: string;
  newPassword: string;
};

export type EhrAccessToken = {
  access_token?: string;
  token_type?: string;
  expires_in?: number;
  scope?: string;
};

export type UpdateUserArchiveStatusData = {
  status: boolean;
  userId: string;
  xTenantId?: string;
};

export type UpdateUserArchiveStatusResponse = Response;

export type GetAllUsersData = {
  archive?: boolean;
  locationId?: string;
  page?: number;
  role?: string;
  roleType?: "PROVIDER" | "STAFF" | "PATIENT";
  searchString?: string;
  size?: number;
  sortBy?: string;
  sortDirection?: string;
  status?: boolean;
  xTenantId?: string;
};

export type GetAllUsersResponse = Response;

export type UpdateUserData = {
  requestBody: User;
  xTenantId?: string;
};

export type UpdateUserResponse = Response;

export type AddUserData = {
  requestBody: User;
  xTenantId?: string;
};

export type AddUserResponse = Response;

export type ChangeAvatar3Data = {
  requestBody: ChangeAvatarRequest;
  userUuid: string;
  xTenantId?: string;
};

export type ChangeAvatar3Response = Response;

export type VerifyUserData = {
  email: string;
  xTenantId?: string;
};

export type VerifyUserResponse = Response;

export type VerifyOtpData = {
  email: string;
  linkType: string;
  otp: string;
  xTenantId?: string;
};

export type VerifyOtpResponse = Response;

export type SetPasswordData = {
  linkType: string;
  requestBody: ResetPasswordRequest;
  xTenantId?: string;
};

export type SetPasswordResponse = Response;

export type ResendOtpData = {
  email: string;
  linkType: string;
  xTenantId?: string;
};

export type ResendOtpResponse = Response;

export type LogoutData = {
  requestBody: LogoutRequest;
  xTenantId?: string;
};

export type LogoutResponse = Response;

export type GetAccessTokenData = {
  requestBody: LoginRequest;
  xTenantId?: string;
};

export type GetAccessTokenResponse = Response;

export type ChangePasswordData = {
  requestBody: ChangePasswordRequest;
  xTenantId?: string;
};

export type ChangePasswordResponse = Response;

export type GetAccessTokenFromRefreshTokenData = {
  refreshToken: string;
  xTenantId?: string;
};

export type GetAccessTokenFromRefreshTokenResponse = Response;

export type GetUserData = {
  userId: string;
  xTenantId?: string;
};

export type GetUserResponse = Response;

export type GetProfile1Data = {
  xTenantId?: string;
};

export type GetProfile1Response = Response;

export type GetAllRolesData = {
  xTenantId?: string;
};

export type GetAllRolesResponse = Response;

export type UpdateRoleData = {
  requestBody: Role;
  xTenantId?: string;
};

export type UpdateRoleResponse = Response;

export type AddRoleData = {
  requestBody: Role;
  xTenantId?: string;
};

export type AddRoleResponse = Response;

export type GetAllPrivilegesData = {
  xTenantId?: string;
};

export type GetAllPrivilegesResponse = Response;

export type GetAllProvidersData = {
  archive?: boolean;
  page?: number;
  role?:
    | "SUPER_ADMIN"
    | "FRONTDESK"
    | "BILLER"
    | "NURSE"
    | "PATIENT"
    | "ANONYMOUS"
    | "PROVIDER_GROUP_ADMIN"
    | "ADMIN"
    | "SITE_ADMIN"
    | "PROVIDER";
  searchString?: string;
  size?: number;
  sortBy?: string;
  sortDirection?: string;
  state?: string;
  status?: boolean;
  xTenantId?: string;
};

export type GetAllProvidersResponse = Response;

export type UpdateProviderData = {
  requestBody: Provider;
  xTenantId?: string;
};

export type UpdateProviderResponse = Response;

export type CreateProviderData = {
  requestBody: Provider;
  xTenantId?: string;
};

export type CreateProviderResponse = Response;

export type UpdateProviderArchiveStatusData = {
  providerId: string;
  status: boolean;
  xTenantId?: string;
};

export type UpdateProviderArchiveStatusResponse = Response;

export type UploadVideoData = {
  providerUuid: string;
  requestBody?: {
    file: Blob | File;
  };
  xTenantId?: string;
};

export type UploadVideoResponse = Response;

export type ChangeAvatarData = {
  providerUuid: string;
  requestBody: ChangeAvatarRequest;
  xTenantId?: string;
};

export type ChangeAvatarResponse = Response;

export type GetProviderByIdData = {
  providerUuid: string;
  xTenantId?: string;
};

export type GetProviderByIdResponse = Response;

export type GetProfileData = {
  xTenantId?: string;
};

export type GetProfileResponse = Response;

export type DeleteVideoData = {
  providerUuid: string;
  xTenantId?: string;
};

export type DeleteVideoResponse = Response;

export type GetAllProviderGroupsData = {
  archive?: boolean;
  page?: number;
  searchString?: string;
  size?: number;
  sortBy?: string;
  sortDirection?: string;
  state?: string;
  status?: boolean;
  xTenantId?: string;
};

export type GetAllProviderGroupsResponse = Response;

export type UpdateProviderGroupData = {
  requestBody: ProviderGroup;
  xTenantId?: string;
};

export type UpdateProviderGroupResponse = Response;

export type CreateProviderGroupData = {
  requestBody: ProviderGroup;
  xTenantId?: string;
};

export type CreateProviderGroupResponse = Response;

export type SyncDatabaseSchemaData = {
  uuid: string;
  xTenantId?: string;
};

export type SyncDatabaseSchemaResponse = Response;

export type UpdateProviderGroupArchiveStatusData = {
  providerGroupId: string;
  status: boolean;
  xTenantId?: string;
};

export type UpdateProviderGroupArchiveStatusResponse = Response;

export type ChangeAvatar1Data = {
  providerGroupId: string;
  requestBody: ChangeAvatarRequest;
  xTenantId?: string;
};

export type ChangeAvatar1Response = Response;

export type GetProviderGroupByIdData = {
  providerGroupId: string;
  xTenantId?: string;
};

export type GetProviderGroupByIdResponse = Response;

export type GetAllPatientData = {
  archive?: boolean;
  mrn?: string;
  name?: string;
  page?: number;
  searchString?: string;
  size?: number;
  sortBy?: string;
  sortDirection?: string;
  status?: boolean;
  xTenantId?: string;
};

export type GetAllPatientResponse = Response;

export type UpdatePatientData = {
  requestBody: Patient;
  xTenantId?: string;
};

export type UpdatePatientResponse = Response;

export type CreatePatientData = {
  requestBody: Patient;
  xTenantId?: string;
};

export type CreatePatientResponse = Response;

export type UpdatePatientArchiveStatusData = {
  patientId: string;
  status: boolean;
  xTenantId?: string;
};

export type UpdatePatientArchiveStatusResponse = Response;

export type ChangeAvatar2Data = {
  patientUuid: string;
  requestBody: ChangeAvatarRequest;
  xTenantId?: string;
};

export type ChangeAvatar2Response = Response;

export type UploadFileData = {
  formData: {
    file: Blob | File;
  };
  xTenantId?: string;
};

export type UploadFileResponse = Response;

export type GetPatientByIdData = {
  patientUuid: string;
  xTenantId?: string;
};

export type GetPatientByIdResponse = Response;

export type GetProfile2Data = {
  xTenantId?: string;
};

export type GetProfile2Response = Response;

export type DownloadTemplateData = {
  xTenantId?: string;
};

export type DownloadTemplateResponse = Blob | File;

export type GetPatientVitals1Data = {
  endDate?: string;
  page?: number;
  patientUuid: string;
  size?: number;
  sort?: string;
  sortBy?: string;
  startDate?: string;
  timeFilter?: "LAST_MONTH" | "LAST_WEEK" | "PAST_24_HOURS" | "DATE_RANGE";
  vitalName?: string;
  xTenantId?: string;
};

export type GetPatientVitals1Response = Response;

export type UpdatePatientVitalData = {
  requestBody: PatientVital;
  xTenantId?: string;
};

export type UpdatePatientVitalResponse = Response;

export type CreatePatientVitalData = {
  requestBody: PatientVital;
  xTenantId?: string;
};

export type CreatePatientVitalResponse = Response;

export type CreateListPatientVitalData = {
  requestBody: PatientVitalRequest;
  xTenantId?: string;
};

export type CreateListPatientVitalResponse = Response;

export type GetPatientVitalByIdData = {
  patientVitalId: string;
  xTenantId?: string;
};

export type GetPatientVitalByIdResponse = Response;

export type GetPatientLatestVitalsData = {
  patientUuid: string;
  xTenantId?: string;
};

export type GetPatientLatestVitalsResponse = Response;

export type GetPatientMedicationData = {
  archive?: boolean;
  page?: number;
  patientUuid: string;
  searchString?: string;
  size?: number;
  sort?: string;
  sortBy?: string;
  status?: boolean;
  xTenantId?: string;
};

export type GetPatientMedicationResponse = Response;

export type UpdatePatientMedicationData = {
  requestBody: PatientMedication;
  xTenantId?: string;
};

export type UpdatePatientMedicationResponse = Response;

export type CreatePatientMedicationData = {
  requestBody: PatientMedication;
  xTenantId?: string;
};

export type CreatePatientMedicationResponse = Response;

export type DeletePatientMedicationIdData = {
  patientMedicationId: string;
  status?: boolean;
  xTenantId?: string;
};

export type DeletePatientMedicationIdResponse = Response;

export type GetPatientMedicationByIdData = {
  patientMedicationId: string;
  xTenantId?: string;
};

export type GetPatientMedicationByIdResponse = Response;

export type UpdatePatientConsentStatusData = {
  patientUuid: string;
  status: boolean;
  xTenantId?: string;
};

export type UpdatePatientConsentStatusResponse = Response;

export type GetAllConsentFormTemplateData = {
  archive?: boolean;
  page?: number;
  searchString?: string;
  size?: number;
  sortBy?: string;
  sortDirection?: string;
  status?: boolean;
  xTenantId?: string;
};

export type GetAllConsentFormTemplateResponse = Response;

export type UpdateConsentFormsData = {
  requestBody: ConsentFormTemplate;
  xTenantId?: string;
};

export type UpdateConsentFormsResponse = Response;

export type CreateConsentFormsData = {
  requestBody: ConsentFormTemplate;
  xTenantId?: string;
};

export type CreateConsentFormsResponse = Response;

export type UpdateConsentFormArchiveStatusData = {
  consentFormId: string;
  status: boolean;
  xTenantId?: string;
};

export type UpdateConsentFormArchiveStatusResponse = Response;

export type GetAllPatientConsentFormData = {
  page?: number;
  patientUuid: string;
  searchString?: string;
  size?: number;
  sortBy?: string;
  sortDirection?: string;
  xTenantId?: string;
};

export type GetAllPatientConsentFormResponse = Response;

export type AddPatientConsentData = {
  requestBody: PatientConsentForm;
  xTenantId?: string;
};

export type AddPatientConsentResponse = Response;

export type GetPatientConsentFormByIdData = {
  patientConsentFormUuid: string;
  xTenantId?: string;
};

export type GetPatientConsentFormByIdResponse = Response;

export type GetConsentFormIdData = {
  consentFormId: string;
  xTenantId?: string;
};

export type GetConsentFormIdResponse = Response;

export type GetPatientAllergyData = {
  archive?: boolean;
  page?: number;
  patientUuid: string;
  searchString?: string;
  size?: number;
  sort?: string;
  sortBy?: string;
  status?: boolean;
  xTenantId?: string;
};

export type GetPatientAllergyResponse = Response;

export type UpdatePatientAllergyData = {
  requestBody: PatientAllergy;
  xTenantId?: string;
};

export type UpdatePatientAllergyResponse = Response;

export type CreatePatientAllergyData = {
  requestBody: PatientAllergy;
  xTenantId?: string;
};

export type CreatePatientAllergyResponse = Response;

export type UpdatePatientAllergyArchiveStatusData = {
  patientAllergyId: string;
  status: boolean;
  xTenantId?: string;
};

export type UpdatePatientAllergyArchiveStatusResponse = Response;

export type GetPatientAllergyByIdData = {
  patientAllergyId: string;
  xTenantId?: string;
};

export type GetPatientAllergyByIdResponse = Response;

export type GetMedicalCodesData = {
  active?: boolean;
  archive?: boolean;
  page?: number;
  searchString?: string;
  size?: number;
  sort?: string;
  sortBy?: string;
  type?: "ICD" | "CPT" | "PATIENT";
  xTenantId?: string;
};

export type GetMedicalCodesResponse = Response;

export type UpdateMedicalCodeData = {
  requestBody: MedicalCode;
  xTenantId?: string;
};

export type UpdateMedicalCodeResponse = Response;

export type CreateMedicalCodeData = {
  requestBody: MedicalCode;
  xTenantId?: string;
};

export type CreateMedicalCodeResponse = Response;

export type UpdateMedicalCodeStatusData = {
  medicalCodeId: string;
  status: boolean;
  xTenantId?: string;
};

export type UpdateMedicalCodeStatusResponse = Response;

export type UpdateMedicalCodeArchiveStatusData = {
  medicalCodeId: string;
  status: boolean;
  xTenantId?: string;
};

export type UpdateMedicalCodeArchiveStatusResponse = Response;

export type GetMedicalCodeByIdData = {
  medicalCodeId: string;
  xTenantId?: string;
};

export type GetMedicalCodeByIdResponse = Response;

export type GetAllLocationsData = {
  archive?: boolean;
  page?: number;
  searchString?: string;
  size?: number;
  sortBy?: string;
  sortDirection?: string;
  state?: string;
  status?: boolean;
  xTenantId?: string;
};

export type GetAllLocationsResponse = Response;

export type UpdateLocationData = {
  requestBody: Location;
  xTenantId?: string;
};

export type UpdateLocationResponse = Response;

export type CreateLocationData = {
  requestBody: Location;
  xTenantId?: string;
};

export type CreateLocationResponse = Response;

export type UpdateLocationArchiveStatusData = {
  locationId: string;
  status: boolean;
  xTenantId?: string;
};

export type UpdateLocationArchiveStatusResponse = Response;

export type GetLocationByIdData = {
  locationId: string;
  xTenantId?: string;
};

export type GetLocationByIdResponse = Response;

export type SetProviderAvailabilitySettingData = {
  requestBody: AvailabilitySetting;
  xTenantId?: string;
};

export type SetProviderAvailabilitySettingResponse = Response;

export type GetProviderAvailabilitySettingData = {
  providerUuid: string;
  xTenantId?: string;
};

export type GetProviderAvailabilitySettingResponse = Response;

export type GetPatientVitalsData = {
  page?: number;
  searchString?: string;
  size?: number;
  sort?: string;
  sortBy?: string;
  xTenantId?: string;
};

export type GetPatientVitalsResponse = Response;

export type GetAllLicensedStatesData = {
  page?: number;
  searchString?: string;
  size?: number;
  sortBy?: string;
  sortDirection?: string;
  xTenantId?: string;
};

export type GetAllLicensedStatesResponse = Response;

export type GetPractitionerByProviderIdData = {
  practitionerId: string;
  xTenantId?: string;
};

export type GetPractitionerByProviderIdResponse = Provider;

export type GetOrganizationByPracticeIdData = {
  practiceId: string;
  xTenantId?: string;
};

export type GetOrganizationByPracticeIdResponse = ProviderGroup;

export type GetLocationByLocationIdData = {
  locationId: string;
  xTenantId?: string;
};

export type GetLocationByLocationIdResponse = Location;

export type GetAccessToken1Data = {
  xTenantId?: string;
};

export type GetAccessToken1Response = EhrAccessToken;

export type $OpenApiTs = {
  "/api/master/{userId}/archive-status/{status}": {
    put: {
      req: UpdateUserArchiveStatusData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/user": {
    get: {
      req: GetAllUsersData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    put: {
      req: UpdateUserData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    post: {
      req: AddUserData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/change-avatar/{userUuid}": {
    put: {
      req: ChangeAvatar3Data;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/verify-user/{email}": {
    post: {
      req: VerifyUserData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/verify-otp/{linkType}/{email}/{otp}": {
    post: {
      req: VerifyOtpData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/set-password/{linkType}": {
    post: {
      req: SetPasswordData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/resend-otp/{linkType}/{email}": {
    post: {
      req: ResendOtpData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/logout": {
    post: {
      req: LogoutData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/login": {
    post: {
      req: GetAccessTokenData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/change-password": {
    post: {
      req: ChangePasswordData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/access-token": {
    post: {
      req: GetAccessTokenFromRefreshTokenData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/user/{userId}": {
    get: {
      req: GetUserData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/profile": {
    get: {
      req: GetProfile1Data;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/role": {
    get: {
      req: GetAllRolesData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    put: {
      req: UpdateRoleData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    post: {
      req: AddRoleData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/role/privileges": {
    get: {
      req: GetAllPrivilegesData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider": {
    get: {
      req: GetAllProvidersData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    put: {
      req: UpdateProviderData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    post: {
      req: CreateProviderData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider/{providerId}/archive-status/{status}": {
    put: {
      req: UpdateProviderArchiveStatusData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider/upload": {
    put: {
      req: UploadVideoData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider/change-avatar/{providerUuid}": {
    put: {
      req: ChangeAvatarData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider/{providerUuid}": {
    get: {
      req: GetProviderByIdData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider/profile": {
    get: {
      req: GetProfileData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider/video/{providerUuid}": {
    delete: {
      req: DeleteVideoData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider-group": {
    get: {
      req: GetAllProviderGroupsData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    put: {
      req: UpdateProviderGroupData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    post: {
      req: CreateProviderGroupData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider-group/{uuid}/sync": {
    put: {
      req: SyncDatabaseSchemaData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider-group/{providerGroupId}/archive-status/{status}": {
    put: {
      req: UpdateProviderGroupArchiveStatusData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider-group/change-avatar/{providerGroupId}": {
    put: {
      req: ChangeAvatar1Data;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider-group/{providerGroupId}": {
    get: {
      req: GetProviderGroupByIdData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient": {
    get: {
      req: GetAllPatientData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    put: {
      req: UpdatePatientData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    post: {
      req: CreatePatientData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient/{patientId}/archive-status/{status}": {
    put: {
      req: UpdatePatientArchiveStatusData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient/change-avatar/{patientUuid}": {
    put: {
      req: ChangeAvatar2Data;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient/patient-upload": {
    post: {
      req: UploadFileData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient/{patientUuid}": {
    get: {
      req: GetPatientByIdData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient/profile": {
    get: {
      req: GetProfile2Data;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient/patient-template": {
    get: {
      req: DownloadTemplateData;
      res: {
        /**
         * OK
         */
        200: Blob | File;
      };
    };
  };
  "/api/master/patient-vital": {
    get: {
      req: GetPatientVitals1Data;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    put: {
      req: UpdatePatientVitalData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    post: {
      req: CreatePatientVitalData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient-vital/list": {
    post: {
      req: CreateListPatientVitalData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient-vital/{patientVitalId}": {
    get: {
      req: GetPatientVitalByIdData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient-vital/latest": {
    get: {
      req: GetPatientLatestVitalsData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient-medication": {
    get: {
      req: GetPatientMedicationData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    put: {
      req: UpdatePatientMedicationData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    post: {
      req: CreatePatientMedicationData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient-medication/archive-status/{patientMedicationId}": {
    put: {
      req: DeletePatientMedicationIdData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient-medication/{patientMedicationId}": {
    get: {
      req: GetPatientMedicationByIdData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient-consent-form/{patientUuid}/status/{status}": {
    put: {
      req: UpdatePatientConsentStatusData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/consent-form": {
    get: {
      req: GetAllConsentFormTemplateData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    put: {
      req: UpdateConsentFormsData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    post: {
      req: CreateConsentFormsData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/consent-form/{consentFormId}/archive-status/{status}": {
    put: {
      req: UpdateConsentFormArchiveStatusData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient-consent-form": {
    get: {
      req: GetAllPatientConsentFormData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    post: {
      req: AddPatientConsentData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient-consent-form/{patientConsentFormUuid}": {
    get: {
      req: GetPatientConsentFormByIdData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/consent-form/{consentFormId}": {
    get: {
      req: GetConsentFormIdData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient-allergy": {
    get: {
      req: GetPatientAllergyData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    put: {
      req: UpdatePatientAllergyData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    post: {
      req: CreatePatientAllergyData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient-allergy/{patientAllergyId}/archive-status/{status}": {
    put: {
      req: UpdatePatientAllergyArchiveStatusData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/patient-allergy/{patientAllergyId}": {
    get: {
      req: GetPatientAllergyByIdData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/medical-codes": {
    get: {
      req: GetMedicalCodesData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    put: {
      req: UpdateMedicalCodeData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    post: {
      req: CreateMedicalCodeData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/medical-codes/{medicalCodeId}/status/{status}": {
    put: {
      req: UpdateMedicalCodeStatusData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/medical-codes/{medicalCodeId}/archive-status/{status}": {
    put: {
      req: UpdateMedicalCodeArchiveStatusData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/medical-codes/{medicalCodeId}": {
    get: {
      req: GetMedicalCodeByIdData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/location": {
    get: {
      req: GetAllLocationsData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    put: {
      req: UpdateLocationData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
    post: {
      req: CreateLocationData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/location/{locationId}/archive-status/{status}": {
    put: {
      req: UpdateLocationArchiveStatusData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/location/{locationId}": {
    get: {
      req: GetLocationByIdData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider/availability-setting": {
    post: {
      req: SetProviderAvailabilitySettingData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/provider/{providerUuid}/availability-setting": {
    get: {
      req: GetProviderAvailabilitySettingData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/vital": {
    get: {
      req: GetPatientVitalsData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/license-state": {
    get: {
      req: GetAllLicensedStatesData;
      res: {
        /**
         * OK
         */
        200: Response;
      };
    };
  };
  "/api/master/ehr-practitioner/{practitionerId}": {
    get: {
      req: GetPractitionerByProviderIdData;
      res: {
        /**
         * OK
         */
        200: Provider;
      };
    };
  };
  "/api/master/ehr-organization/{practiceId}": {
    get: {
      req: GetOrganizationByPracticeIdData;
      res: {
        /**
         * OK
         */
        200: ProviderGroup;
      };
    };
  };
  "/api/master/ehr-location/{locationId}": {
    get: {
      req: GetLocationByLocationIdData;
      res: {
        /**
         * OK
         */
        200: Location;
      };
    };
  };
  "/api/master/ehr-access-token": {
    get: {
      req: GetAccessToken1Data;
      res: {
        /**
         * OK
         */
        200: EhrAccessToken;
      };
    };
  };
};
